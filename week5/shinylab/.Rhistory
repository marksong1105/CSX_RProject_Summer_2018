runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
setwd("~/")
library("ggmap")
library("mapproj")
library ("ggplot2")
install.packages("ggmap")
install.packages("maps")
library("ggmap")
library("mapproj")
library ("ggplot2")
#地圖上文字標示的語言
map <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
ggmap(map)
#經緯度
map <- get_map(location = c(lon = 120.233937, lat = 22.993013), zoom = 10, language = "zh-TW")
ggmap(map)
#地圖的類型
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW", maptype = "roadmap")
#經緯度
map <- get_map(location = c(lon = 120.233937, lat = 22.993013), zoom = 10, language = "zh-TW")
#darken 這個參數可以讓地圖變暗（或是變亮）
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW")
ggmap(map, darken = 0.5)
#讓地圖變亮
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW")
ggmap(map, darken = c(0.5, "white"))
#地圖的類型
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW", maptype = "roadmap")
ggmap(map)
#紫外線即時監測資料的 csv 檔
uv <- read.csv("college-map.CSV")
View(uv)
View(uv)
#依照資料發佈單位（PublishAgency）分開畫圖
ggmap(map) +
geom_point(aes(x = 緯度, y = 經度, size = UVI), data = uv) +
facet_grid( ~ PublishAgency)
, size = UV
#依照資料發佈單位（PublishAgency）分開畫圖
ggmap(map) +
geom_point(aes(x = 緯度, y = 經度 , size = UVI), data = uv)
#依照資料發佈單位（PublishAgency）分開畫圖
ggmap(map) +
geom_point(aes(x = 緯度, y = 經度), data = uv)
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=SiteName ,y = UVI)) + geom_point(color="red")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地區名稱 ,y = UVI)) + geom_point(color="red")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地區名稱 ,y = 地理名稱)) + geom_point(color="red")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地理名稱 ,y = 地區名稱)) + geom_point(color="red")
#地圖上文字標示的語言
map <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
ggmap(map)
#經緯度
map <- get_map(location = c(lon = 120.233937, lat = 22.993013), zoom = 10, language = "zh-TW")
ggmap(map)
#地圖的類型
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW", maptype = "roadmap")
ggmap(map)
#darken 這個參數可以讓地圖變暗（或是變亮）
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW")
ggmap(map, darken = 0.5)
#讓地圖變亮
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW")
ggmap(map, darken = c(0.5, "white"))
#紫外線即時監測資料的 csv 檔
uv <- read.csv("d:/temps/0711-lab.CSV")
#紫外線即時監測資料的 csv 檔
uv <- read.csv("0711-ggmpa-lab.CSV")
#紫外線即時監測資料的 csv 檔
uv <- read.csv("0711-ggmap-lab.CSV")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=SiteName ,y = UVI)) + geom_point(color="red")
#這裡原始的經緯度資料是以度分秒表示，在使用前要轉換為度數表示。
lon.deg <- sapply((strsplit(as.character(uv$WGS84Lon), ",")), as.numeric)
uv$lon <- lon.deg[1, ] + lon.deg[2, ]/60 + lon.deg[3, ]/3600
lat.deg <- sapply((strsplit(as.character(uv$WGS84Lat), ",")), as.numeric)
uv$lat <- lat.deg[1, ] + lat.deg[2, ]/60 + lat.deg[3, ]/3600
#使用 ggplot 的語法，把資料加入地圖中：
library(ggmap)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
#把地圖的顏色調淡一點，讓資料點更清楚
ggmap(map, darken = c(0.5, "white")) +
geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
#使用 Google 地圖的標記（marker）與路徑（path）
d <- function(x=-95.36, y=29.76, n,r,a){
round(data.frame(
lon = jitter(rep(x,n), amount = a),
lat = jitter(rep(y,n), amount = a)
), digits = r)
}
df <- d(n = 50,r = 3,a = .3)
map <- get_googlemap(markers = df, path = df,, scale = 2)
ggmap(map)
mu <- c(-95.3632715, 29.7632836)
nDataSets <- sample(4:10,1)
chkpts <- NULL
for(k in 1:nDataSets){
a <- rnorm(2); b <- rnorm(2);
si <- 1/3000 * (outer(a,a) + outer(b,b))
chkpts <- rbind(chkpts,
cbind(MASS::mvrnorm(rpois(1,50), jitter(mu, .01), si), k))
}
chkpts <- data.frame(chkpts)
names(chkpts) <- c("lon", "lat","class")
chkpts$class <- factor(chkpts$class)
qplot(lon, lat, data = chkpts, colour = class)
ggmap(get_map(maptype = "satellite"), extent = "device") +
stat_density2d(aes(x = lon, y = lat, colour = class), data = chkpts, bins = 5)
# only violent crimes
violent_crimes <- subset(crime,
offense != "auto theft" &
offense != "theft" &
offense != "burglary"
)
# rank violent crimes
violent_crimes$offense <-
factor(violent_crimes$offense,
levels = c("robbery", "aggravated assault",
"rape", "murder")
)
# restrict to downtown
violent_crimes <- subset(violent_crimes,
-95.39681 <= lon & lon <= -95.34188 &
29.73631 <= lat & lat <=  29.78400
)
library(grid)
theme_set(theme_bw(16))
HoustonMap <- qmap("houston", zoom = 14, color = "bw")
# a contour plot
HoustonMap +
stat_density2d(aes(x = lon, y = lat, colour = offense),
size = 3, bins = 2, alpha = 3/4, data = violent_crimes) +
scale_colour_discrete("Offense", labels = c("Robery","Aggravated Assault","Rape","Murder")) +
theme(
legend.text = element_text(size = 15, vjust = .5),
legend.title = element_text(size = 15,face="bold"),
legend.key.size = unit(1.8,"lines")
)
# 二維的 histogram
HoustonMap +
stat_bin2d(aes(x = lon, y = lat, colour = offense, fill = offense),
size = .5, bins = 30, alpha = 2/4, data = violent_crimes) +
scale_colour_discrete("Offense",
labels = c("Robery","Aggravated Assault","Rape","Murder"),
guide = FALSE) +
scale_fill_discrete("Offense", labels = c("Robery","Aggravated Assault","Rape","Murder")) +
theme(
legend.text = element_text(size = 15, vjust = .5),
legend.title = element_text(size = 15,face="bold"),
legend.key.size = unit(1.8,"lines")
)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
size = 2, bins = 4, data = violent_crimes, geom = "polygon") +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10))
houston <- get_map("houston", zoom = 14)
overlay <- stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), bins = 4, geom = "polygon", data = violent_crimes)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon", data = violent_crimes) +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
inset(
grob = ggplotGrob(ggplot() + overlay +
scale_fill_gradient("Violent\nCrime\nDensity") +
scale_alpha(range = c(.4, .75), guide = FALSE) +
theme_inset()
),
xmin = attr(houston,"bb")$ll.lon +
(7/10) * (attr(houston,"bb")$ur.lon - attr(houston,"bb")$ll.lon),
xmax = Inf,
ymin = -Inf,
ymax = attr(houston,"bb")$ll.lat +
(3/10) * (attr(houston,"bb")$ur.lat - attr(houston,"bb")$ll.lat)
)
df <- data.frame(
x = rnorm(10*100, -95.36258, .05),
y = rnorm(10*100,  29.76196, .05),
year = rep(paste("year",format(1:10)), each = 100)
)
for(k in 0:9){
df$x[1:100 + 100*k] <- df$x[1:100 + 100*k] + sqrt(.05)*cos(2*pi*k/10)
df$y[1:100 + 100*k] <- df$y[1:100 + 100*k] + sqrt(.05)*sin(2*pi*k/10)
}
ggmap(get_map(),
base_layer = ggplot(aes(x = x, y = y), data = df)) +
stat_density2d(aes(fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon") +
scale_fill_gradient2(low = "white", mid = "orange", high = "red", midpoint = 10) +
scale_alpha(range = c(.2, .75), guide = FALSE) +
facet_wrap(~ year)
#把地圖的顏色調淡一點，讓資料點更清楚
ggmap(map, darken = c(0.5, "white")) +
geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地理名稱 ,y = 地區名稱)) + geom_point(color="red")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=SiteName ,y = UVI)) + geom_point(color="red")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地理名稱 ,y = 地區名稱)) + geom_point(color="red")
#紫外線即時監測資料的 csv 檔
uv <- read.csv("college-map.CSV")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地理名稱 ,y = 地區名稱)) + geom_point(color="red")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = UVI), data = uv)
#紫外線即時監測資料的 csv 檔
uv <- read.csv("college-map.CSV")
View(uv)
View(uv)
View(uv)
View(uv)
#使用 ggplot 的語法，把資料加入地圖中：
library(ggmap)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數,教師數), data = uv)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 教師數), data = uv)
map <- get_map(location = 'Taiwan', zoom = 10)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 教師數), data = uv)
ggplot(data = uv, aes(x=地理名稱 ,y=地區名稱))
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地理 ,y=地區)) + geom_point(color="red")
ggplot(data = uv, aes(x=地理 ,y=地區))
ggplot(data = uv, aes(x = 地理)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x = 地理)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x = 地區)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x=地區 ,y=學生數)) + geom_histogram()
ggplot(data = uv, aes(x=學生數)) + geom_histogram()
ggplot(data = uv, aes(x=教師數)) + geom_histogram()
ggplot(data = uv, aes(x = 地區, y=學生數))
ggplot(data = uv, aes(x = 地區, y=學生數)) + geom_boxplot()
ggplot(data = uv, aes(x = 教師數, y=地理)) + geom_boxplot()
ggplot(data = uv, aes(x = 學生數, y=地區)) + geom_boxplot()
ggplot(data = uv, aes(x = 地理, y=教師數)) + geom_boxplot()
ggplot(data = uv, aes(x =地區 , y=學生數)) + geom_boxplot()
ggplot(data = uv, aes(x = 學群編號編碼)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(Y = 學群編號編碼)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x = 學群編號編碼)) +
geom_bar(fill = "lightblue", colour = "black")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理==北部)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理=='北部')
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理 == '北部')
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理 == 北部)
ggplot(data = uv, aes(x = 地理)) +
geom_bar(fill = "lightblue", colour = "black")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理 == 北部)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理 == "北部")
#ggplot2 紫外線即時監測資料
ggplot(data = uv, aes(x=地理 ,y=地區)) + geom_point(color="red")
ggplot(data = uv, aes(x = 地理)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x = 地區)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x = 學群編號編碼)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = uv, aes(x = 地區, y=學生數)) + geom_boxplot()
ggplot(data = uv, aes(x = 地理, y=教師數)) + geom_boxplot()
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 教師數), data = uv)
#地圖的類型
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 10, language = "zh-TW", maptype = "roadmap")
ggmap(map)
#地圖的類型
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 7, language = "zh-TW", maptype = "roadmap")
ggmap(map)
#地圖的類型
map <- get_map(location = c(lon = 120.233937, lat = 22.993013),
zoom = 8, language = "zh-TW", maptype = "roadmap")
ggmap(map)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
map <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW" , maptype = "roadmap")
ggmap(map)
ggplot(data = uv, aes(x = 地區, y=學生數)) + geom_boxplot()
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 教師數), data = uv)
dta <- read.csv(file = "107TeacherList-V3.csv", header = TRUE, sep=",")
View(dta)
View(dta)
ggplot(data = uv, aes(x=兼專任 ,y=大考學群名稱)) + geom_point(color="red")
ggplot(data = uv, aes(x=專兼任 ,y=大考學群名稱)) + geom_point(color="red")
ggplot(data = uv, aes(x= 專兼任 ,y=大考學群名稱)) + geom_point(color="red")
ggplot(data = uv, aes(x= 專兼任 ,y=大考學群名稱)) + geom_point(color="red")
ggplot(data = dta, aes(x = 地理)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = dta, aes(x= 專兼任 ,y=大考學群名稱)) + geom_point(color="red")
ggplot(data = dta, aes(x = 聘書職級)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = dta, aes(x = 專兼任)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = dta, aes(x = 聘書職級)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = dta, aes(x = 大考學群名稱, y=專兼任)) + geom_boxplot()
ggplot(data = dta, aes(x = 大考學群名稱, y=聘書職級)) + geom_boxplot()
ggplot(data = dta, aes(x = 學校體制)) +
geom_bar(fill = "lightblue", colour = "black")
histogram(~ 學生數, data = uv, xlab = '地理', ylab='教師數',type = "density")
require("lattice")
histogram(~ 學生數, data = uv, xlab = '地理', ylab='教師數',type = "density")
histogram(~ 學生數, data = uv, xlab = '學群編號編碼', ylab='教師數',type = "density")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv$地理 || 地理 == "北部")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = uv || 地理 == "北部")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = collegemap || 地理 == "北部")
#紫外線即時監測資料的 csv 檔
collegemap <- read.csv("college-map.CSV")
#ggplot2 紫外線即時監測資料
ggplot(data = collegemap, aes(x=地理 ,y=地區)) + geom_point(color="red")
ggplot(data = collegemap, aes(x = 地理)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = collegemap, aes(x = 地區)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = collegemap, aes(x = 學群編號編碼)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = collegemap, aes(x = 地區, y=學生數)) + geom_boxplot()
ggplot(data = collegemap, aes(x = 地理, y=教師數)) + geom_boxplot()
histogram(~ 學生數, data = collegemap, xlab = '學群編號編碼', ylab='教師數',type = "density")
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = collegemap)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 教師數), data = collegemap)
ggmap(map) + geom_point(aes(x = 經度, y = 緯度, size = 學生數), data = collegemap || 地理 == "北部")
ggmap(map) + geom_point(aes(x = longtitude, y = latitude, size = boy), data = collegemap)
#紫外線即時監測資料的 csv 檔
collegemap <- read.csv("college-map.CSV")
ggmap(map) + geom_point(aes(x = longtitude, y = latitude, size = boy), data = collegemap)
ggmap(map) + geom_point(aes(x = longtitude, y = latitude, size = girl), data = collegemap)
ggmap(map) + geom_point(aes(x = longtitude, y = latitude, size = student), data = collegemap)
#地圖的類型
map <- get_map(location = 'Taiwan', zoom = 10, language = "zh-TW" , maptype = "roadmap")
ggmap(map)
ggmap(map) + geom_point(aes(x = longtitude, y = latitude, size = student), data = collegemap)
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/ggmaplab')
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
freqFrame <- read.csv(file = "學群-2.csv", header = TRUE, sep=",")
setwd("~/")
freqFrame <- read.csv(file = "學群-2.csv", header = TRUE, sep=",")
#文字雲
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
data_wc2 <- freqFrame[1:200, ]
#這個好看
wordcloud2(data_wc2, size = 1, minRotation = -pi/2, maxRotation = -pi/2)
runApp('GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
View(freqFrame)
View(freqFrame)
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
View(dta)
View(dta)
n=1
dta2 <- filter(dta,大學學群代碼== n)
dta2 <- filter(dta,大考學群代碼== n)
dta2 <- filter(dta, 大考學群代碼 == n)
dta2 <- filter(dta, 大考學群名稱 == n)
dta2 <- filter(dta, 大考學群代碼 == n)
filter(dta, 大考學群代碼 == n)
filter(dta, 大考學群代碼 == 1)
filter(dta, '大考學群代碼' == 1)
filter(dta, '大考學群代碼' == 2)
dta2 <- filter(dta, '大考學群代碼' == 2)
dta2
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
View(books)
dta <- read.csv(file = "107TeacherList-V3.csv", header = TRUE, sep=",")
setwd("~/")
dta <- read.csv(file = "107TeacherList-V3.csv", header = TRUE, sep=",")
dat2 <- dta[dta$大考學群代碼==1]
dat2 <- dta[dta$大考學群代碼=1]
dat2 <- dta[dta$大考學群代碼== 1]
dat2 <- dta[dta$大考學群代碼 == 1]
dat2 <- dta[dta$大考學群代碼 == 1,]
View(dat2)
View(dat2)
runApp('GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
setwd("~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("~/GitHub/CSX_RProject_Summer_2018/week6/collegelab/.RData")
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/collegelab')
install.packages("shinyWidgets")
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/collegelab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/collegelab')
runApp()
runApp()
runApp()
setwd("~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(books)
View(books)
runApp()
runApp()
runApp()
View(books)
View(books)
runApp()
runApp()
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
shiny::runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
runApp('~/GitHub/CSX_RProject_Summer_2018/week6/wc2lab')
